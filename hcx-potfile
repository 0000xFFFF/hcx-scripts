#!/usr/bin/env python3

#
# USAGE:
# hcx-potfile "/path/for/the/potfile (optional)"   - the script will find the potfile by itself
# hcx-potfile PASS                                 - only print passwords from potfile
# hcx-potfile SORT0                                - sort by clm index (0 = num, 1 = hashid, 2 = essid, 3 = psk)
# hcx-potfile NOCOLOR                              - don't print color (made for dumping files)
#

import sys
import os
import subprocess
from colorama import Fore, Back, Style
from tabulate import tabulate
from operator import itemgetter

print_pass_only = False
sort_essid = False
nocolor = False
sort_index = 3
potfile_path = os.path.expanduser('~') + "/.local/share/hashcat/hashcat.potfile"

for i_ in sys.argv[1:]:
    i = i_.lower()
    if i == "nocolor":
        nocolor = True
    elif i == "pass":
        print_pass_only = True
    elif "sort" in i:
        sort_essid = True
        i_split = i.split("sort")
        if len(i_split) >= 2 and i_split[1]:
            sort_index = int(i_split[1])
    else:
        potfile_path = i


def hex2str(string):
    try:
        hex_bytes = bytes.fromhex(string)
        utf8_string = hex_bytes.decode('utf-8')
        return utf8_string
    except Exception as e: return "HEX ERROR"

potfile = open(potfile_path, 'r')
potfile_lines = potfile.readlines()
potfile.close()

if print_pass_only:
    for i in potfile_lines:
        print(i.replace("\n", "").split(":")[1])
else:
    psks = []
    num = 0
    for i in potfile_lines:
        line = i.replace("\n", "")
        if not line: continue
        num += 1
        split_star = line.split("*")
        if len(split_star) != 2: continue
        hash = split_star[0]
        split_colon = split_star[1].split(":")
        essid_hex = split_colon[0]
        psk = split_colon[1]
        essid = hex2str(essid_hex)

        if nocolor:
            psks.append([str(num),hash,essid,psk])
        else:
            clr_num   = Style.NORMAL + Fore.YELLOW + str(num) + Style.RESET_ALL
            clr_hash  = Style.NORMAL + Fore.GREEN  + hash     + Style.RESET_ALL
            clr_essid = Style.NORMAL + Fore.BLUE   + essid    + Style.RESET_ALL
            clr_psk   = Style.NORMAL + Fore.RED    + psk      + Style.RESET_ALL
            psks.append([clr_num,clr_hash,clr_essid,clr_psk])

    if sort_essid:
        psks = sorted(psks, key=itemgetter(sort_index))

    print(tabulate(psks, headers=["#", "HASHCAT ID", "ESSID", "PASSWORD"]))
