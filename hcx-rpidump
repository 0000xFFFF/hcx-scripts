#!/usr/bin/env python

import os
import time
import psutil
import subprocess
import sys

interface = "wlan1"
dump_dir = "/home/pi/dump"
if not os.path.exists(dump_dir): os.makedirs(dump_dir)
os.chdir(dump_dir)

bpf = os.path.join(os.path.dirname(os.path.realpath(__file__)), "hcx-menu-rpi-filter.bpf")
useBPF = True
if os.stat(bpf).st_size == 0:
    useBPF = False

def checkRoot():
    return os.geteuid() == 0

if not checkRoot():
    print("use root.")
    exit()

def get_adapters():
    addresses = psutil.net_if_addrs()
    stats = psutil.net_if_stats()
    ifs = []
    for intface, addr_list in addresses.items():
        ifs.append(intface)
    return ifs

def noAdapter():
    ifs = get_adapters()
    for i in ifs:
        if i == interface:
            return False
    return True

def run():
    if "hcxdumptool" in (p.name() for p in psutil.process_iter()):
        print("can't start, already running")
        return

    if noAdapter():
        print("can't start, no valid adapter")
        return

    print(f"bpf: {bpf}")
    print("starting...")
    arg_list = ['sudo', 'hcxdumptool', '-i', interface]
    if useBPF:
        arg_list += [f"--bpf={bpf}"]

    process = subprocess.Popen(arg_list, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    output, _ = process.communicate()
    print("died")

while True:
    run()
    time.sleep(2)
